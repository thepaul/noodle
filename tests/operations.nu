# operations

(assert (== (+ 4) (+ 0 4) +4 4))
(assert (== (- 4) (- 0 4) -4))
(assert (== (- 10 2.5) 7.5))
(assert (== (% 254 165 11) 1))
(assert (== (* 21 3 2) 126))
(assert (!= (// 10 3) (/ 10 3)))
(assert (== (// 10 3) 3))
(assert (== (/ 10 3) (+ 3 (/ 3))))
(assert (== (** 2 3) 8))
(assert (not (+ (& (~ 0x1234) 0xff)
                -0xcb)))
(assert (is (= foo None) (= bar None)))
(assert (is-not 0 None))
(assert (== \[0 2] \[0 2]))
(assert (is-not \[0 2] \[0 2]))
(assert (is-not None \[0 2] None))
(assert (!= \[0 2] \[0 3] None \[0 2]))
(assert (== (>> 0x100 8) 1))
(assert (== (<< 1 4 4) 0x100))
(assert (== (^ 0x17 0x3a) 0x2d))
(assert (== (& 0x17 0x3a) 0x12))

# operations which can take one argument
(assert (== (% 12) 12))
(assert (== (- 1) -1))
(assert (== (+ -4) -4))
(assert (== (* 2) 2))
(assert (== (/ 4) 0.25 (/ 1 4)))
(assert (== (** 3) 3))
(assert (== (// 12) 12))
(assert (== (<< 5) 32))
(assert (== (>> 5) 0))
